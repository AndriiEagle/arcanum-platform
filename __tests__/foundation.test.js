// –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Foundation –¥–ª—è –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ (–®–∞–≥–∏ 1-7)
require('dotenv').config({ path: '.env.local' })

console.log('üß™ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï FOUNDATION')
console.log('=====================================')
console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –®–∞–≥–æ–≤ 1-7: –ë–î ‚Üí TokenService ‚Üí API ‚Üí –õ–∏–º–∏—Ç—ã ‚Üí Store ‚Üí UI ‚Üí –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è')

const { createClient } = require('@supabase/supabase-js')

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY

async function testStep1_Database() {
  console.log('\nüìä –®–ê–ì 1: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –ë–î')
  
  const supabase = createClient(supabaseUrl, supabaseKey)
  const requiredTables = [
    'ui_layouts', 'life_spheres', 'user_stats', 'user_tasks', 
    'sphere_categories', 'generated_mascots', 'user_buffs', 
    'ai_model_usage', 'scheduled_rewards'
  ]
  
  let tablesFound = 0
  
  for (const table of requiredTables) {
    try {
      const { error } = await supabase.from(table).select('*').limit(1)
      if (!error || error.code === 'PGRST301') { // RLS –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ = —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        console.log(`   ‚úÖ ${table}`)
        tablesFound++
      } else if (error.code === 'PGRST116') {
        console.log(`   ‚ùå ${table} - –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)
      } else {
        console.log(`   ‚ö†Ô∏è  ${table} - ${error.message}`)
      }
    } catch (e) {
      console.log(`   ‚ùå ${table} - –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è`)
    }
  }
  
  const dbScore = Math.round((tablesFound / requiredTables.length) * 100)
  console.log(`   üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –ë–î: ${dbScore}% (${tablesFound}/${requiredTables.length} —Ç–∞–±–ª–∏—Ü)`)
  
  return dbScore >= 90
}

async function testStep2_TokenService() {
  console.log('\nüí∞ –®–ê–ì 2: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TokenService')
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
  const fs = require('fs')
  const tokenServicePath = 'lib/services/tokenService.ts'
  
  if (!fs.existsSync(tokenServicePath)) {
    console.log('   ‚ùå tokenService.ts –Ω–µ –Ω–∞–π–¥–µ–Ω')
    return false
  }
  
  const serviceContent = fs.readFileSync(tokenServicePath, 'utf8')
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
  const requiredFunctions = ['logTokenUsage', 'getUserTokenUsage', 'getUserTokenStats', 'checkTokenLimit']
  let functionsFound = 0
  
  for (const func of requiredFunctions) {
    if (serviceContent.includes(`export async function ${func}`) || 
        serviceContent.includes(`export const ${func}`)) {
      console.log(`   ‚úÖ ${func}()`)
      functionsFound++
    } else {
      console.log(`   ‚ùå ${func}() –Ω–µ –Ω–∞–π–¥–µ–Ω–∞`)
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
  const hasSupabaseImport = serviceContent.includes("from '../supabase/client'")
  const hasCalculateCostImport = serviceContent.includes("from '../config/aiModels'")
  
  console.log(`   ${hasSupabaseImport ? '‚úÖ' : '‚ùå'} –ò–º–ø–æ—Ä—Ç Supabase client`)
  console.log(`   ${hasCalculateCostImport ? '‚úÖ' : '‚ùå'} –ò–º–ø–æ—Ä—Ç calculateCost`)
  
  const serviceScore = Math.round((functionsFound / requiredFunctions.length) * 100)
  console.log(`   üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å TokenService: ${serviceScore}%`)
  
  return serviceScore >= 75 && hasSupabaseImport
}

async function testStep3_ChatAPIIntegration() {
  console.log('\nü§ñ –®–ê–ì 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ Chat API')
  
  const fs = require('fs')
  const chatApiPath = 'src/app/api/chat/route.ts'
  
  if (!fs.existsSync(chatApiPath)) {
    console.log('   ‚ùå Chat API route.ts –Ω–µ –Ω–∞–π–¥–µ–Ω')
    return false
  }
  
  const apiContent = fs.readFileSync(chatApiPath, 'utf8')
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  const hasLogTokenUsageImport = apiContent.includes('logTokenUsage')
  const hasCalculateCostImport = apiContent.includes('calculateCost')
  const hasLoggingCode = apiContent.includes('await logTokenUsage({')
  const hasTokenUsageLog = apiContent.includes('response.usage')
  
  console.log(`   ${hasLogTokenUsageImport ? '‚úÖ' : '‚ùå'} –ò–º–ø–æ—Ä—Ç logTokenUsage`)
  console.log(`   ${hasCalculateCostImport ? '‚úÖ' : '‚ùå'} –ò–º–ø–æ—Ä—Ç calculateCost`)
  console.log(`   ${hasLoggingCode ? '‚úÖ' : '‚ùå'} –ö–æ–¥ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤`)
  console.log(`   ${hasTokenUsageLog ? '‚úÖ' : '‚ùå'} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ response.usage`)
  
  const integrationChecks = [hasLogTokenUsageImport, hasCalculateCostImport, hasLoggingCode, hasTokenUsageLog]
  const integrationScore = Math.round((integrationChecks.filter(Boolean).length / integrationChecks.length) * 100)
  
  console.log(`   üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: ${integrationScore}%`)
  
  return integrationScore >= 75
}

async function testStep4_TokenLimits() {
  console.log('\nüö´ –®–ê–ì 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω-–ª–∏–º–∏—Ç–æ–≤')
  
  const fs = require('fs')
  const chatApiPath = 'src/app/api/chat/route.ts'
  const apiContent = fs.readFileSync(chatApiPath, 'utf8')
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤
  const hasGetUserTokenUsage = apiContent.includes('getUserTokenUsage')
  const hasLimitCheck = apiContent.includes('userTokensUsed > tokenLimit')
  const hasPaywallResponse = apiContent.includes('status: 402')
  const hasPaywallData = apiContent.includes('paywall')
  const hasUpgradeUrl = apiContent.includes('upgrade_url')
  
  console.log(`   ${hasGetUserTokenUsage ? '‚úÖ' : '‚ùå'} –ò–º–ø–æ—Ä—Ç getUserTokenUsage`)
  console.log(`   ${hasLimitCheck ? '‚úÖ' : '‚ùå'} –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–æ–≤`)
  console.log(`   ${hasPaywallResponse ? '‚úÖ' : '‚ùå'} –û—Ç–≤–µ—Ç 402 Payment Required`)
  console.log(`   ${hasPaywallData ? '‚úÖ' : '‚ùå'} –î–∞–Ω–Ω—ã–µ paywall`)
  console.log(`   ${hasUpgradeUrl ? '‚úÖ' : '‚ùå'} URL –¥–ª—è upgrade`)
  
  const limitChecks = [hasGetUserTokenUsage, hasLimitCheck, hasPaywallResponse, hasPaywallData, hasUpgradeUrl]
  const limitScore = Math.round((limitChecks.filter(Boolean).length / limitChecks.length) * 100)
  
  console.log(`   üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω-–ª–∏–º–∏—Ç–æ–≤: ${limitScore}%`)
  
  return limitScore >= 80
}

async function testStep5_ZustandStore() {
  console.log('\nüóÑÔ∏è –®–ê–ì 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Zustand Store')
  
  const fs = require('fs')
  const storePath = 'lib/stores/tokenStore.ts'
  
  if (!fs.existsSync(storePath)) {
    console.log('   ‚ùå tokenStore.ts –Ω–µ –Ω–∞–π–¥–µ–Ω')
    return false
  }
  
  const storeContent = fs.readFileSync(storePath, 'utf8')
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ store —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
  const hasCreateImport = storeContent.includes("import { create } from 'zustand'")
  const hasTokenState = storeContent.includes('interface TokenState')
  const hasUpdateUsage = storeContent.includes('updateUsage:')
  const hasCheckLimits = storeContent.includes('checkLimits:')
  const hasSelectors = storeContent.includes('selectTokenUsage')
  
  console.log(`   ${hasCreateImport ? '‚úÖ' : '‚ùå'} –ò–º–ø–æ—Ä—Ç Zustand create`)
  console.log(`   ${hasTokenState ? '‚úÖ' : '‚ùå'} –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å TokenState`)
  console.log(`   ${hasUpdateUsage ? '‚úÖ' : '‚ùå'} –§—É–Ω–∫—Ü–∏—è updateUsage`)
  console.log(`   ${hasCheckLimits ? '‚úÖ' : '‚ùå'} –§—É–Ω–∫—Ü–∏—è checkLimits`)
  console.log(`   ${hasSelectors ? '‚úÖ' : '‚ùå'} –°–µ–ª–µ–∫—Ç–æ—Ä—ã`)
  
  const storeChecks = [hasCreateImport, hasTokenState, hasUpdateUsage, hasCheckLimits, hasSelectors]
  const storeScore = Math.round((storeChecks.filter(Boolean).length / storeChecks.length) * 100)
  
  console.log(`   üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å Store: ${storeScore}%`)
  
  return storeScore >= 80
}

async function testStep6_TokenCounter() {
  console.log('\nüìä –®–ê–ì 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TokenCounter –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞')
  
  const fs = require('fs')
  const componentPath = 'src/components/payments/TokenCounter.tsx'
  
  if (!fs.existsSync(componentPath)) {
    console.log('   ‚ùå TokenCounter.tsx –Ω–µ –Ω–∞–π–¥–µ–Ω')
    return false
  }
  
  const componentContent = fs.readFileSync(componentPath, 'utf8')
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const hasReactImport = componentContent.includes("import React")
  const hasStoreImport = componentContent.includes("useTokenStore")
  const hasProps = componentContent.includes('TokenCounterProps')
  const hasCompactMode = componentContent.includes('compact')
  const hasColorSystem = componentContent.includes('getStatusColor')
  
  console.log(`   ${hasReactImport ? '‚úÖ' : '‚ùå'} –ò–º–ø–æ—Ä—Ç React`)
  console.log(`   ${hasStoreImport ? '‚úÖ' : '‚ùå'} –ò–º–ø–æ—Ä—Ç useTokenStore`)
  console.log(`   ${hasProps ? '‚úÖ' : '‚ùå'} –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–ø—Å–æ–≤`)
  console.log(`   ${hasCompactMode ? '‚úÖ' : '‚ùå'} –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º`)
  console.log(`   ${hasColorSystem ? '‚úÖ' : '‚ùå'} –°–∏—Å—Ç–µ–º–∞ —Ü–≤–µ—Ç–æ–≤`)
  
  const componentChecks = [hasReactImport, hasStoreImport, hasProps, hasCompactMode, hasColorSystem]
  const componentScore = Math.round((componentChecks.filter(Boolean).length / componentChecks.length) * 100)
  
  console.log(`   üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å TokenCounter: ${componentScore}%`)
  
  return componentScore >= 80
}

async function testStep7_Integration() {
  console.log('\nüîó –®–ê–ì 7: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ MainContentArea')
  
  const fs = require('fs')
  const layoutPath = 'src/components/layout/MainContentArea.tsx'
  
  if (!fs.existsSync(layoutPath)) {
    console.log('   ‚ùå MainContentArea.tsx –Ω–µ –Ω–∞–π–¥–µ–Ω')
    return false
  }
  
  const layoutContent = fs.readFileSync(layoutPath, 'utf8')
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
  const hasTokenCounterImport = layoutContent.includes('TokenCounter')
  const hasTokenCounterUsage = layoutContent.includes('<TokenCounter') || layoutContent.includes('TokenCounter (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)')
  const hasCompactProp = layoutContent.includes('compact={true}') || layoutContent.includes('–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ')
  const hasUpgradeHandler = layoutContent.includes('onUpgrade') || layoutContent.includes('Upgrade clicked')
  
  console.log(`   ${hasTokenCounterImport ? '‚úÖ' : '‚ö†Ô∏è'} –ò–º–ø–æ—Ä—Ç TokenCounter`)
  console.log(`   ${hasTokenCounterUsage ? '‚úÖ' : '‚ùå'} –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞`)
  console.log(`   ${hasCompactProp ? '‚úÖ' : '‚ùå'} –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º`)
  console.log(`   ${hasUpgradeHandler ? '‚úÖ' : '‚ùå'} –û–±—Ä–∞–±–æ—Ç—á–∏–∫ upgrade`)
  
  // –ì–∏–±–∫–∞—è –æ—Ü–µ–Ω–∫–∞ (–∏–º–ø–æ—Ä—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω)
  const integrationChecks = [hasTokenCounterUsage, hasCompactProp, hasUpgradeHandler]
  let integrationScore = Math.round((integrationChecks.filter(Boolean).length / integrationChecks.length) * 100)
  
  if (hasTokenCounterImport) integrationScore = Math.min(100, integrationScore + 10)
  
  console.log(`   üìä –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: ${integrationScore}%`)
  
  return integrationScore >= 70
}

async function testCompilation() {
  console.log('\nüî® –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏')
  
  const { exec } = require('child_process')
  
  return new Promise((resolve) => {
    exec('npm run build', (error, stdout, stderr) => {
      if (error) {
        console.log('   ‚ùå –ö–æ–º–ø–∏–ª—è—Ü–∏—è –Ω–µ –ø—Ä–æ—à–ª–∞')
        console.log(`      ${error.message.split('\n')[0]}`)
        resolve(false)
      } else if (stdout.includes('Compiled successfully')) {
        console.log('   ‚úÖ –ö–æ–º–ø–∏–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–∞')
        resolve(true)
      } else {
        console.log('   ‚ö†Ô∏è –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏')
        resolve(true)
      }
    })
  })
}

async function main() {
  try {
    console.log(`\nüöÄ –ù–∞—á–∏–Ω–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Foundation...`)
    console.log(`‚è∞ –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è: 2-3 –º–∏–Ω—É—Ç—ã\n`)
    
    const results = {
      step1_database: await testStep1_Database(),
      step2_tokenService: await testStep2_TokenService(),
      step3_chatAPI: await testStep3_ChatAPIIntegration(),
      step4_tokenLimits: await testStep4_TokenLimits(),
      step5_zustandStore: await testStep5_ZustandStore(),
      step6_tokenCounter: await testStep6_TokenCounter(),
      step7_integration: await testStep7_Integration(),
      compilation: await testCompilation()
    }
    
    console.log('\nüèÅ –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ FOUNDATION')
    console.log('=================================')
    
    Object.entries(results).forEach(([key, passed]) => {
      const stepName = key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())
      console.log(`${passed ? '‚úÖ' : '‚ùå'} ${stepName}`)
    })
    
    const passedSteps = Object.values(results).filter(Boolean).length
    const totalSteps = Object.keys(results).length
    const foundationScore = Math.round((passedSteps / totalSteps) * 100)
    
    console.log(`\nüéØ –ì–û–¢–û–í–ù–û–°–¢–¨ FOUNDATION: ${foundationScore}% (${passedSteps}/${totalSteps} —à–∞–≥–æ–≤)`)
    
    if (foundationScore >= 85) {
      console.log('\nüéâ FOUNDATION –ì–û–¢–û–í –ö –≠–¢–ê–ü–£ 2!')
      console.log('‚úÖ –§—É–Ω–¥–∞–º–µ–Ω—Ç –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω')
      console.log('‚úÖ –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç')
      console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')
      console.log('‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç')
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ª–∏–º–∏—Ç–æ–≤ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞')
      console.log('‚úÖ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω—ã')
      console.log('\n‚û°Ô∏è  –ì–û–¢–û–í –ö –≠–¢–ê–ü–£ 2: PAYMENT INFRASTRUCTURE (–®–∞–≥–∏ 9-14)')
      console.log('    –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: Stripe —Å–µ—Ä–≤–∏—Å –∏ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ endpoints')
    } else if (foundationScore >= 70) {
      console.log('\n‚ö†Ô∏è  FOUNDATION –ß–ê–°–¢–ò–ß–ù–û –ì–û–¢–û–í')
      console.log('‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç')
      console.log('‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏')
      console.log('‚úÖ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ –≠—Ç–∞–ø—É 2 —Å –¥–æ—Ä–∞–±–æ—Ç–∫–æ–π')
    } else {
      console.log('\n‚ùå FOUNDATION –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò')
      console.log('‚ö†Ô∏è  –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–µ—à–µ–Ω—ã')
      console.log('‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–∏—Ç—å Foundation –ø–µ—Ä–µ–¥ –≠—Ç–∞–ø–æ–º 2')
    }
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message)
  }
}

main() 