// –¢–µ—Å—Ç Zustand store –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤
console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ZUSTAND TOKEN STORE')
console.log('==================================')

// –°–∏–º—É–ª—è—Ü–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const mockTokenStore = {
  // –°–∏–º—É–ª—è—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è store
  state: {
    used: 0,
    limit: 1000,
    isLoading: false,
    lastUpdated: null,
    isPremium: false,
    stats: { today: 0, thisWeek: 0, thisMonth: 0, totalCost: 0 },
    showWarning: false,
    warningMessage: ''
  },
  
  // –°–∏–º—É–ª—è—Ü–∏—è –º–µ—Ç–æ–¥–æ–≤
  updateUsage: async function(userId) {
    console.log(`üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è ${userId}...`)
    this.state.isLoading = true
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    await new Promise(resolve => setTimeout(resolve, 100))
    
    this.state.used = 750 // 75% –æ—Ç –ª–∏–º–∏—Ç–∞
    this.state.isLoading = false
    this.state.lastUpdated = new Date()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    const percentageUsed = (this.state.used / this.state.limit) * 100
    if (percentageUsed > 80) {
      this.state.showWarning = true
      this.state.warningMessage = `–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ ${percentageUsed.toFixed(0)}% —Ç–æ–∫–µ–Ω–æ–≤`
    }
    
    console.log(`‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${this.state.used}/${this.state.limit} —Ç–æ–∫–µ–Ω–æ–≤`)
  },
  
  checkLimits: async function(userId) {
    console.log(`üö´ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –¥–ª—è ${userId}...`)
    
    const percentageUsed = (this.state.used / this.state.limit) * 100
    const result = {
      isWithinLimit: this.state.used <= this.state.limit,
      upgradeRecommended: percentageUsed > 80,
      percentageUsed
    }
    
    console.log(`‚úÖ –õ–∏–º–∏—Ç—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã:`)
    console.log(`   - –í –ø—Ä–µ–¥–µ–ª–∞—Ö –ª–∏–º–∏—Ç–∞: ${result.isWithinLimit ? '‚úÖ' : '‚ùå'}`)
    console.log(`   - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è upgrade: ${result.upgradeRecommended ? 'üí∞ –î–ê' : '‚úÖ –ù–ï–¢'}`)
    console.log(`   - –ü—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: ${result.percentageUsed.toFixed(1)}%`)
    
    return result
  },
  
  setPremiumStatus: function(isPremium) {
    console.log(`üëë –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å–∞: ${isPremium}`)
    
    const oldLimit = this.state.limit
    this.state.isPremium = isPremium
    this.state.limit = isPremium ? 10000 : 1000
    
    const percentageUsed = (this.state.used / this.state.limit) * 100
    
    if (isPremium && percentageUsed < 80) {
      this.state.showWarning = false
      this.state.warningMessage = ''
    }
    
    console.log(`‚úÖ –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω: ${oldLimit} ‚Üí ${this.state.limit} —Ç–æ–∫–µ–Ω–æ–≤`)
    console.log(`   - –ù–æ–≤—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç: ${percentageUsed.toFixed(1)}%`)
  }
}

// –°–∏–º—É–ª—è—Ü–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
const selectTokenUsage = (state) => ({
  used: state.used,
  limit: state.limit,
  percentageUsed: (state.used / state.limit) * 100,
  isLoading: state.isLoading
})

const selectTokenWarning = (state) => ({
  showWarning: state.showWarning,
  warningMessage: state.warningMessage,
  isNearLimit: (state.used / state.limit) > 0.8
})

async function testBasicFunctionality() {
  console.log('\nüîß –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å store')
  
  // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  console.log('üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è...')
  const usage = selectTokenUsage(mockTokenStore.state)
  console.log(`   - –¢–æ–∫–µ–Ω—ã: ${usage.used}/${usage.limit}`)
  console.log(`   - –ü—Ä–æ—Ü–µ–Ω—Ç: ${usage.percentageUsed.toFixed(1)}%`)
  console.log(`   - –ó–∞–≥—Ä—É–∑–∫–∞: ${usage.isLoading ? '–î–ê' : '–ù–ï–¢'}`)
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
  await mockTokenStore.updateUsage('test-user-123')
  
  const updatedUsage = selectTokenUsage(mockTokenStore.state)
  console.log(`‚úÖ –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${updatedUsage.used}/${updatedUsage.limit} (${updatedUsage.percentageUsed.toFixed(1)}%)`)
  
  return updatedUsage.used > 0
}

async function testWarningSystem() {
  console.log('\n‚ö†Ô∏è  –¢–µ—Å—Ç 2: –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π')
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ
  mockTokenStore.state.used = 850 // 85% –æ—Ç –ª–∏–º–∏—Ç–∞ 1000
  
  const limits = await mockTokenStore.checkLimits('test-user-456')
  const warning = selectTokenWarning(mockTokenStore.state)
  
  console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π:')
  console.log(`   - –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ${warning.showWarning ? '‚ö†Ô∏è  –î–ê' : '‚úÖ –ù–ï–¢'}`)
  console.log(`   - –ë–ª–∏–∑–∫–æ –∫ –ª–∏–º–∏—Ç—É: ${warning.isNearLimit ? '‚ö†Ô∏è  –î–ê' : '‚úÖ –ù–ï–¢'}`)
  console.log(`   - –°–æ–æ–±—â–µ–Ω–∏–µ: ${warning.warningMessage || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`)
  
  return warning.showWarning && warning.isNearLimit
}

async function testPremiumUpgrade() {
  console.log('\nüëë –¢–µ—Å—Ç 3: –ü—Ä–µ–º–∏—É–º upgrade')
  
  // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - –±–∞–∑–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –≤—ã—Å–æ–∫–∏–º –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º
  mockTokenStore.state.used = 950
  mockTokenStore.state.limit = 1000
  mockTokenStore.state.isPremium = false
  
  console.log('üìä –ë–∞–∑–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:')
  const beforeUpgrade = selectTokenUsage(mockTokenStore.state)
  console.log(`   - –õ–∏–º–∏—Ç: ${beforeUpgrade.limit}`)
  console.log(`   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${beforeUpgrade.percentageUsed.toFixed(1)}%`)
  
  // Upgrade –¥–æ –ø—Ä–µ–º–∏—É–º
  mockTokenStore.setPremiumStatus(true)
  
  console.log('üìä –ü–æ—Å–ª–µ upgrade:')
  const afterUpgrade = selectTokenUsage(mockTokenStore.state)
  console.log(`   - –ù–æ–≤—ã–π –ª–∏–º–∏—Ç: ${afterUpgrade.limit}`)
  console.log(`   - –ù–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${afterUpgrade.percentageUsed.toFixed(1)}%`)
  
  const warning = selectTokenWarning(mockTokenStore.state)
  console.log(`   - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ —É–±—Ä–∞–Ω–æ: ${!warning.showWarning ? '‚úÖ' : '‚ùå'}`)
  
  return afterUpgrade.limit === 10000 && afterUpgrade.percentageUsed < 80
}

async function testSelectors() {
  console.log('\nüéØ –¢–µ—Å—Ç 4: –°–µ–ª–µ–∫—Ç–æ—Ä—ã –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è')
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
  mockTokenStore.state.used = 650
  mockTokenStore.state.limit = 1000
  mockTokenStore.state.stats = {
    today: 200,
    thisWeek: 450,
    thisMonth: 650,
    totalCost: 0.85
  }
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
  const usage = selectTokenUsage(mockTokenStore.state)
  const warning = selectTokenWarning(mockTokenStore.state)
  
  console.log('üìä –°–µ–ª–µ–∫—Ç–æ—Ä —Ç–æ–∫–µ–Ω–æ–≤:')
  console.log(`   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${usage.used}/${usage.limit}`)
  console.log(`   - –ü—Ä–æ—Ü–µ–Ω—Ç: ${usage.percentageUsed.toFixed(1)}%`)
  console.log(`   - –ó–∞–≥—Ä—É–∑–∫–∞: ${usage.isLoading}`)
  
  console.log('‚ö†Ô∏è  –°–µ–ª–µ–∫—Ç–æ—Ä –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π:')
  console.log(`   - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ${warning.showWarning}`)
  console.log(`   - –ë–ª–∏–∑–∫–æ –∫ –ª–∏–º–∏—Ç—É: ${warning.isNearLimit}`)
  
  return usage.percentageUsed === 65 && !warning.isNearLimit
}

async function main() {
  try {
    const test1 = await testBasicFunctionality()
    const test2 = await testWarningSystem()
    const test3 = await testPremiumUpgrade()
    const test4 = await testSelectors()
    
    console.log('\nüìã –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ STORE')
    console.log('============================')
    console.log(`üîß –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: ${test1 ? '‚úÖ' : '‚ùå'}`)
    console.log(`‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${test2 ? '‚úÖ' : '‚ùå'}`)
    console.log(`üëë –ü—Ä–µ–º–∏—É–º upgrade: ${test3 ? '‚úÖ' : '‚ùå'}`)
    console.log(`üéØ –°–µ–ª–µ–∫—Ç–æ—Ä—ã: ${test4 ? '‚úÖ' : '‚ùå'}`)
    
    const passedTests = [test1, test2, test3, test4].filter(Boolean).length
    console.log(`\nüéØ –£–°–ü–ï–®–ù–´–• –¢–ï–°–¢–û–í: ${passedTests}/4`)
    
    if (passedTests === 4) {
      console.log('\nüéâ –®–ê–ì 5 –ó–ê–í–ï–†–®–ï–ù!')
      console.log('‚úÖ Zustand store —Å–æ–∑–¥–∞–Ω –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω')
      console.log('‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç')
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç')
      console.log('‚úÖ –ü—Ä–µ–º–∏—É–º upgrades –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è')
      console.log('‚úÖ –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã')
      console.log('\n‚û°Ô∏è  –ì–û–¢–û–í –ö –®–ê–ì–£ 6: Token Counter –∫–æ–º–ø–æ–Ω–µ–Ω—Ç')
    } else {
      console.log('\n‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ store')
    }
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
  }
}

main() 