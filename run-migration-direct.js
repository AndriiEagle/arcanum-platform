const { createClient } = require('@supabase/supabase-js')
require('dotenv').config()

const supabaseUrl = 'https://jvrbxpbbrnficvemtyxm.supabase.co'
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseServiceKey) {
  console.error('‚ùå SUPABASE_SERVICE_ROLE_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function addSphereDetailsColumn() {
  console.log('üöÄ –î–û–ë–ê–í–õ–ï–ù–ò–ï –ü–û–õ–Ø sphere_details –í –¢–ê–ë–õ–ò–¶–£ life_spheres')
  console.log('==================================================')
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã...')
    
    const { data: columns, error: columnsError } = await supabase
      .from('information_schema.columns')
      .select('column_name, data_type')
      .eq('table_name', 'life_spheres')
      .eq('table_schema', 'public')
    
    if (columnsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã:', columnsError)
      return false
    }
    
    console.log('üìä –¢–µ–∫—É—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏:', columns.map(c => `${c.column_name} (${c.data_type})`).join(', '))
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª–µ sphere_details
    const hasDetailsColumn = columns.some(col => col.column_name === 'sphere_details')
    
    if (hasDetailsColumn) {
      console.log('‚úÖ –ü–æ–ª–µ sphere_details —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')
      return true
    }
    
    console.log('‚ûï –ü–æ–ª–µ sphere_details –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º...')
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä—è–º–æ–π SQL –∑–∞–ø—Ä–æ—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏
    const { data, error } = await supabase
      .from('life_spheres')
      .select('id')
      .limit(1)
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ:', error)
      return false
    }
    
    console.log('‚úÖ –î–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ life_spheres –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω')
    console.log('üí° –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è sphere_details –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –≤ Supabase SQL Editor:')
    console.log(`
ALTER TABLE life_spheres 
ADD COLUMN sphere_details JSONB DEFAULT '{}'::jsonb;

CREATE INDEX idx_life_spheres_sphere_details ON life_spheres USING GIN (sphere_details);
`)
    
    return true
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    return false
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
addSphereDetailsColumn().then(success => {
  if (success) {
    console.log('\nüéØ –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì: –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∫–æ–º–∞–Ω–¥—ã –≤ Supabase, –∑–∞—Ç–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ –∏–º–ø–æ—Ä—Ç')
  }
})

