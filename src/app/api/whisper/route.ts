import { NextRequest, NextResponse } from 'next/server'
import OpenAI from 'openai'

export async function POST(request: NextRequest) {
  try {
    if (!process.env.OPENAI_API_KEY) {
      return NextResponse.json({ error: 'OpenAI API key not configured' }, { status: 500 })
    }

    const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY })

    const formData = await request.formData()
    const audioFile = formData.get('audio') as File

    if (!audioFile) {
      return NextResponse.json({ error: 'Audio file is required' }, { status: 400 })
    }

    console.log('üé§ Whisper transcribing audio:', audioFile.name, audioFile.size, 'bytes')

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ –≤ Whisper –¥–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏
    const transcription = await openai.audio.transcriptions.create({
      file: audioFile,
      model: 'whisper-1',
      language: 'ru', // –£–∫–∞–∑—ã–≤–∞–µ–º —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
      prompt: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç –æ —Å–≤–æ–∏—Ö –Ω–∞–≤—ã–∫–∞—Ö, –∑–∞–¥–∞—á–∞—Ö, —Ü–µ–ª—è—Ö –∏–ª–∏ —Ö–æ—á–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Arcanum Platform.',
      temperature: 0.2
    })

    const transcribedText = transcription.text

    console.log('‚úÖ Whisper transcription result:', transcribedText)

    return NextResponse.json({ 
      transcription: transcribedText,
      duration: audioFile.size > 0 ? Math.round(audioFile.size / 16000) : 0, // –ü—Ä–∏–º–µ—Ä–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
      model: 'whisper-1',
      language: 'ru'
    })

  } catch (error) {
    console.error('‚ùå Whisper transcription error:', error)
    const errorMessage = error instanceof Error ? error.message : 'Unknown error'
    
    return NextResponse.json({
      error: `–û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏: ${errorMessage}`
    }, { status: 500 })
  }
}

// GET –º–µ—Ç–æ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
export async function GET() {
  return NextResponse.json({ 
    message: 'Arcanum Whisper API',
    status: 'active',
    model: 'whisper-1',
    supported_formats: ['mp3', 'wav', 'webm', 'm4a', 'ogg'],
    max_file_size: '25MB',
    hasApiKey: !!process.env.OPENAI_API_KEY
  })
} 