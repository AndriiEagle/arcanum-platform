'use client'

import { useState, useEffect, useRef } from 'react'
import { createClient } from '../../lib/supabase/client'
import { useCurrentUserId } from '../../lib/stores/authStore'
import { useCurrentModel, useModelStore } from '../../lib/stores/modelStore'
import { useUIStore } from '../../lib/stores/uiStore'
import ModelSelector from './ai/ModelSelector'
// import PaywallModal from './payments/PaywallModal'
// import { getPriceVariant, logPaywallImpression, logPaywallClick, logPaywallConversion } from '../../lib/services/abTestService'

interface Message {
  id: string
  content: string
  sender: 'user' | 'moyo'
  timestamp: Date
  type: 'text' | 'command' | 'system'
}

interface DialogueWindowProps {
  isOpen?: boolean
  onToggle?: () => void
}

export default function DialogueWindow({ isOpen = true, onToggle }: DialogueWindowProps) {
  const userId = useCurrentUserId()
  const currentModel = useCurrentModel()
  const { addTokenUsage } = useModelStore()
  const { isLeftPanelOpen, isRightPanelOpen } = useUIStore()
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞
  const [messages, setMessages] = useState<Message[]>([
    {
      id: '1',
      content: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø MOYO - —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–∫–ª–æ–Ω –≤ Arcanum Platform. –í—Ä–µ–º—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á: 2—á 15–º. –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ! üöÄ',
      sender: 'moyo',
      timestamp: new Date(),
      type: 'system'
    }
  ])
  const [inputValue, setInputValue] = useState('')
  const [isLoading, setIsLoading] = useState(false)
  const [showTools, setShowTools] = useState(false)
  
  // –ù–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
  const [isDragging, setIsDragging] = useState(false)
  const [isResizing, setIsResizing] = useState(false)
  const [isDocked, setIsDocked] = useState(true)
  const [position, setPosition] = useState({ x: 0, y: 0 })
  const [size, setSize] = useState({ width: 384, height: 500 }) // w-96 = 384px
  const [dragOffset, setDragOffset] = useState({ x: 0, y: 0 })
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ Paywall Modal
  const [showPaywall, setShowPaywall] = useState(false)
  const [paywallConfig, setPaywallConfig] = useState({
    type: 'token_limit' as const,
    cost: 2.00,
    description: ''
  })
  const [currentABTest, setCurrentABTest] = useState<any>(null)
  
  const messagesEndRef = useRef<HTMLDivElement>(null)
  const inputRef = useRef<HTMLInputElement>(null)
  const fileInputRef = useRef<HTMLInputElement>(null)
  const dialogRef = useRef<HTMLDivElement>(null)

  const supabase = createClient()

  // –í—ã—á–∏—Å–ª—è–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
  const getAdaptivePosition = () => {
    if (isDocked) {
      const rightOffset = isRightPanelOpen ? 240 : 24 // 15% —à–∏—Ä–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞ ‚âà 240px –∏–ª–∏ –æ—Ç—Å—Ç—É–ø 24px
      return {
        bottom: 24,
        right: rightOffset,
        position: 'fixed' as const
      }
    } else {
      return {
        top: position.y,
        left: position.x,
        position: 'fixed' as const
      }
    }
  }

  // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })
  }

  useEffect(() => {
    scrollToBottom()
  }, [messages])

  // –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
  useEffect(() => {
    if (isOpen && inputRef.current) {
      inputRef.current.focus()
    }
  }, [isOpen])

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
  const handleMouseDown = (e: React.MouseEvent) => {
    if (isDocked) return
    
    setIsDragging(true)
    const rect = dialogRef.current?.getBoundingClientRect()
    if (rect) {
      setDragOffset({
        x: e.clientX - rect.left,
        y: e.clientY - rect.top
      })
    }
  }

  const handleMouseMove = (e: MouseEvent) => {
    if (!isDragging || !dialogRef.current) return
    
    const newX = e.clientX - dragOffset.x
    const newY = e.clientY - dragOffset.y
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≥—Ä–∞–Ω–∏—Ü–∞–º–∏ —ç–∫—Ä–∞–Ω–∞
    const maxX = window.innerWidth - size.width
    const maxY = window.innerHeight - size.height
    
    setPosition({
      x: Math.max(0, Math.min(newX, maxX)),
      y: Math.max(0, Math.min(newY, maxY))
    })
  }

  const handleMouseUp = () => {
    setIsDragging(false)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
  const handleResizeStart = (e: React.MouseEvent) => {
    e.stopPropagation()
    setIsResizing(true)
  }

  const handleResize = (e: MouseEvent) => {
    if (!isResizing) return
    
    const rect = dialogRef.current?.getBoundingClientRect()
    if (rect) {
      const newWidth = Math.max(320, e.clientX - rect.left)
      const newHeight = Math.max(400, e.clientY - rect.top)
      
      setSize({
        width: Math.min(newWidth, window.innerWidth - position.x),
        height: Math.min(newHeight, window.innerHeight - position.y)
      })
    }
  }

  const handleResizeEnd = () => {
    setIsResizing(false)
  }

  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è –º—ã—à–∏
  useEffect(() => {
    if (isDragging) {
      document.addEventListener('mousemove', handleMouseMove)
      document.addEventListener('mouseup', handleMouseUp)
    }
    return () => {
      document.removeEventListener('mousemove', handleMouseMove)
      document.removeEventListener('mouseup', handleMouseUp)
    }
  }, [isDragging, dragOffset])

  useEffect(() => {
    if (isResizing) {
      document.addEventListener('mousemove', handleResize)
      document.addEventListener('mouseup', handleResizeEnd)
    }
    return () => {
      document.removeEventListener('mousemove', handleResize)
      document.removeEventListener('mouseup', handleResizeEnd)
    }
  }, [isResizing, position])

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
  const toggleDocked = () => {
    if (isDocked) {
      // –û—Ç–∫—Ä–µ–ø–ª—è–µ–º: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –≤ —Ü–µ–Ω—Ç—Ä —ç–∫—Ä–∞–Ω–∞
      setPosition({
        x: (window.innerWidth - size.width) / 2,
        y: (window.innerHeight - size.height) / 2
      })
    }
    setIsDocked(!isDocked)
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  const handleSendMessage = async () => {
    if (!inputValue.trim() || isLoading) return

    const userMessage: Message = {
      id: Date.now().toString(),
      content: inputValue.trim(),
      sender: 'user',
      timestamp: new Date(),
      type: 'text'
    }

    setMessages(prev => [...prev, userMessage])
    setInputValue('')
    setIsLoading(true)

    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Arcanum Brain (API –ø–æ–∫–∞ –∑–∞–≥–ª—É—à–∫–∞)
      const response = await fetch('/api/chat', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
          message: userMessage.content,
          context: 'dialogue',
          userId: userId || 'anonymous',
          modelId: currentModel.id
        }),
      })

      let responseText = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Arcanum Brain.'
      let messageType: 'text' | 'command' | 'system' = 'text'

      if (response.ok) {
        const data = await response.json()
        responseText = data.response || 'MOYO –ø–æ–ª—É—á–∏–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞.'
        messageType = data.type || data.commandType || 'text'
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
        if (data.tokensUsed) {
          addTokenUsage(Math.floor(data.tokensUsed * 0.6), Math.floor(data.tokensUsed * 0.4))
        }
        
        // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('ü§ñ MOYO Response:', {
          response: responseText,
          commandType: data.commandType,
          modelUsed: data.modelUsed,
          tokensUsed: data.tokensUsed,
          actions: data.actions
        })
              } else if (response.status === 402) {
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ —Ç–æ–∫–µ–Ω–æ–≤
          try {
            const errorData = await response.json()
            if (errorData.paywall) {
              console.log('üí≥ –¢–æ–∫–µ–Ω-–ª–∏–º–∏—Ç –¥–æ—Å—Ç–∏–≥–Ω—É—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º paywall —Å A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º')
              
              // –°–∏–º—É–ª—è—Ü–∏—è A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ–Ω—ã (–≤—Ä–µ–º–µ–Ω–Ω–æ –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞)
              const userId_safe = userId || 'anonymous'
              const basePrice = 2.00
              const testPrices = [1.50, 1.99, 2.00, 2.40] // –í–∞—Ä–∏–∞–Ω—Ç—ã A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
              const userHash = userId_safe.split('').reduce((hash, char) => hash + char.charCodeAt(0), 0)
              const priceIndex = userHash % testPrices.length
              const abTestPrice = testPrices[priceIndex]
              
              console.log(`üß™ A/B —Ç–µ—Å—Ç —Ç–æ–∫–µ–Ω-–ª–∏–º–∏—Ç–æ–≤: —Ü–µ–Ω–∞ $${abTestPrice} (–∏–Ω–¥–µ–∫—Å ${priceIndex})`)
              
              const mockABTest = {
                price: abTestPrice,
                variant: { id: `variant_${priceIndex}`, label: `–¢–µ—Å—Ç ${priceIndex}` },
                testResult: { userId: userId_safe, testType: 'token_limit', variantId: `variant_${priceIndex}` }
              }
              setCurrentABTest(mockABTest)
              
              setPaywallConfig({
                type: errorData.paywall.type || 'token_limit',
                cost: abTestPrice, // –ò—Å–ø–æ–ª—å–∑—É–µ–º A/B —Ç–µ—Å—Ç–æ–≤—É—é —Ü–µ–Ω—É
                description: errorData.paywall.message || `–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å 2000 —Ç–æ–∫–µ–Ω–æ–≤ –∑–∞ $${abTestPrice}?`
              })
              
              // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–∫–∞–∑ paywall (—Å–∏–º—É–ª—è—Ü–∏—è)
              console.log(`üìä A/B —Ç–µ—Å—Ç impression: ${mockABTest.testResult.variantId}`)
              // await logPaywallImpression(abTestResult.testResult)
              
              setShowPaywall(true)
              setIsLoading(false)
              return // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ
            }
          } catch (parseError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ paywall –¥–∞–Ω–Ω—ã—Ö:', parseError)
          }
          responseText = '–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤. –û–±–Ω–æ–≤–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.'
      } else {
        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –æ—Ç–≤–µ—Ç–∞
        console.error('‚ùå API Error:', response.status, response.statusText)
        responseText = `–û—à–∏–±–∫–∞ API (${response.status}): ${response.statusText}`
      }

      const moyoResponse: Message = {
        id: (Date.now() + 1).toString(),
        content: responseText,
        sender: 'moyo',
        timestamp: new Date(),
        type: messageType
      }

      setMessages(prev => [...prev, moyoResponse])
    } catch (error) {
      console.error('Error sending message:', error)
      const errorMessage: Message = {
        id: (Date.now() + 1).toString(),
        content: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.',
        sender: 'moyo',
        timestamp: new Date(),
        type: 'system'
      }
      setMessages(prev => [...prev, errorMessage])
    } finally {
      setIsLoading(false)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter
  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault()
      handleSendMessage()
    }
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {
    const files = e.target.files
    if (!files || files.length === 0) return

    const fileNames = Array.from(files).map(f => f.name).join(', ')
    const fileMessage: Message = {
      id: Date.now().toString(),
      content: `üìé –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ñ–∞–π–ª—ã: ${fileNames}`,
      sender: 'user',
      timestamp: new Date(),
      type: 'system'
    }

    setMessages(prev => [...prev, fileMessage])

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ Supabase Storage (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)
    if (userId && files.length > 0) {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
      console.log('Uploading files for user:', userId, files)
    }
    const responseMessage: Message = {
      id: (Date.now() + 1).toString(),
      content: '–§–∞–π–ª—ã –ø–æ–ª—É—á–µ–Ω—ã! –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...',
      sender: 'moyo',
      timestamp: new Date(),
      type: 'system'
    }

    setTimeout(() => {
      setMessages(prev => [...prev, responseMessage])
    }, 1000)
  }

  // –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
  const tools = [
    { id: 'add-button', name: '–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É', icon: 'üîò', command: '–¥–æ–±–∞–≤—å –∫–Ω–æ–ø–∫—É' },
    { id: 'create-task', name: '–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É', icon: '‚úÖ', command: '—Å–æ–∑–¥–∞–π –∑–∞–¥–∞—á—É' },
    { id: 'analyze-spheres', name: '–ê–Ω–∞–ª–∏–∑ —Å—Ñ–µ—Ä', icon: 'üåê', command: '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –º–æ–∏ —Å—Ñ–µ—Ä—ã' },
    { id: 'generate-image', name: '–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞—Ä—Ç', icon: 'üé®', command: '—Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ' },
    { id: 'focus-mode', name: '–†–µ–∂–∏–º —Ñ–æ–∫—É—Å–∞', icon: 'üéØ', command: '–∞–∫—Ç–∏–≤–∏—Ä—É–π —Ä–µ–∂–∏–º —Ñ–æ–∫—É—Å–∞' },
    { id: 'level-check', name: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å', icon: 'üìä', command: '–ø–æ–∫–∞–∂–∏ –º–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å' }
  ]

  const handleToolClick = (command: string) => {
    setInputValue(command)
    setShowTools(false)
    inputRef.current?.focus()
  }

  const adaptivePosition = getAdaptivePosition()

  if (!isOpen) {
    return (
      <button
        onClick={onToggle}
        className="w-16 h-16 bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 rounded-full flex items-center justify-center shadow-2xl transition-all duration-300 hover:scale-110 border-2 border-white/20 z-50"
        style={{
          position: 'fixed',
          bottom: 24,
          right: isRightPanelOpen ? 240 : 24
        }}
        title="–û—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ —Å MOYO"
      >
        <div className="text-2xl animate-pulse">ü§ñ</div>
      </button>
    )
  }

  return (
    <div
      ref={dialogRef}
      className={`
        bg-gray-800/95 backdrop-blur-lg rounded-lg border border-gray-700 shadow-2xl flex flex-col overflow-hidden
        ${isDragging ? 'shadow-purple-500/50 scale-105' : 'shadow-2xl'}
        ${isResizing ? 'shadow-blue-500/50' : ''}
        transition-all duration-200
      `}
      style={{
        ...adaptivePosition,
        width: size.width,
        height: size.height,
        zIndex: isDocked ? 40 : 50,
        cursor: isDragging ? 'grabbing' : isDocked ? 'default' : 'grab'
      }}
    >
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      <div 
        className="bg-gradient-to-r from-purple-800 to-blue-800 p-4 border-b border-gray-700 select-none"
        onMouseDown={handleMouseDown}
      >
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-3">
            {/* –ê–≤–∞—Ç–∞—Ä MOYO —Å –∏–Ω–¥–∏–∫–∞—Ü–∏–µ–π –º–æ–¥–µ–ª–∏ */}
            <div className="relative">
              <div 
                className="w-10 h-10 rounded-full flex items-center justify-center border-2 text-lg"
                style={{ 
                  borderColor: currentModel.color,
                  backgroundColor: `${currentModel.color}20`,
                  color: currentModel.color
                }}
              >
                {currentModel.icon}
              </div>
              <div className="absolute -bottom-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-gray-800 animate-pulse" title="–ú–æ–¥–µ–ª—å –∞–∫—Ç–∏–≤–Ω–∞"></div>
            </div>
            <div>
              <h3 className="text-white font-bold">MOYO</h3>
              <p className="text-purple-200 text-xs">{currentModel.name}</p>
            </div>
          </div>
          
          <div className="flex items-center space-x-2">
            {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è/–æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏—è */}
            <button
              onClick={toggleDocked}
              className={`p-1.5 rounded transition-colors ${
                isDocked 
                  ? 'bg-blue-600 text-white hover:bg-blue-700' 
                  : 'bg-gray-700 text-gray-300 hover:bg-gray-600'
              }`}
              title={isDocked ? '–û—Ç–∫—Ä–µ–ø–∏—Ç—å –æ–∫–Ω–æ' : '–ó–∞–∫—Ä–µ–ø–∏—Ç—å –æ–∫–Ω–æ'}
            >
              {isDocked ? 'üìå' : 'üîì'}
            </button>
            
            <ModelSelector />
            <button
              onClick={onToggle}
              className="text-gray-400 hover:text-white transition-colors p-1"
              title="–°–≤–µ—Ä–Ω—É—Ç—å –¥–∏–∞–ª–æ–≥"
            >
              ‚¨áÔ∏è
            </button>
          </div>
        </div>
      </div>

      {/* –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π */}
      <div className="flex-1 overflow-y-auto p-4 space-y-3 custom-scrollbar">
        {messages.map((message) => (
          <div
            key={message.id}
            className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}
          >
            <div
              className={`
                max-w-[80%] p-3 rounded-lg text-sm
                ${message.sender === 'user'
                  ? 'bg-blue-600 text-white rounded-br-none'
                  : message.type === 'system'
                    ? 'bg-purple-900/50 text-purple-200 rounded-bl-none border border-purple-700'
                    : 'bg-gray-700 text-gray-200 rounded-bl-none'
                }
              `}
            >
              <p className="leading-relaxed">{message.content}</p>
              <div className="text-xs opacity-70 mt-1">
                {message.timestamp.toLocaleTimeString('ru-RU', { 
                  hour: '2-digit', 
                  minute: '2-digit' 
                })}
              </div>
            </div>
          </div>
        ))}
        
        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–µ—á–∞—Ç–∞–Ω–∏—è */}
        {isLoading && (
          <div className="flex justify-start">
            <div className="bg-gray-700 text-gray-200 p-3 rounded-lg rounded-bl-none">
              <div className="flex space-x-1">
                <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.1s' }}></div>
                <div className="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style={{ animationDelay: '0.2s' }}></div>
              </div>
            </div>
          </div>
        )}
        <div ref={messagesEndRef} />
      </div>

      {/* –ü–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */}
      {showTools && (
        <div className="bg-gray-900/90 border-t border-gray-700 p-3">
          <div className="text-xs text-gray-400 mb-2">–ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã:</div>
          <div className="grid grid-cols-2 gap-2">
            {tools.map((tool) => (
              <button
                key={tool.id}
                onClick={() => handleToolClick(tool.command)}
                className="flex items-center space-x-2 p-2 bg-gray-800 hover:bg-gray-700 rounded text-xs text-gray-300 hover:text-white transition-colors"
              >
                <span>{tool.icon}</span>
                <span>{tool.name}</span>
              </button>
            ))}
          </div>
        </div>
      )}

      {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
      <div className="p-4 border-t border-gray-700 bg-gray-800/50">
        <div className="flex items-center space-x-2">
          {/* –ö–Ω–æ–ø–∫–∞ —Ñ–∞–π–ª–æ–≤ */}
          <button
            onClick={() => fileInputRef.current?.click()}
            className="w-10 h-10 bg-gray-700 hover:bg-gray-600 rounded-full flex items-center justify-center transition-colors"
            title="–î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã"
          >
            üìé
          </button>
          
          {/* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */}
          <input
            ref={inputRef}
            type="text"
            value={inputValue}
            onChange={(e) => setInputValue(e.target.value)}
            onKeyPress={handleKeyPress}
            placeholder="–°–ø—Ä–æ—Å–∏ MOYO –æ —á–µ–º —É–≥–æ–¥–Ω–æ..."
            className="flex-1 bg-gray-700 border border-gray-600 rounded-full px-4 py-2 text-white placeholder-gray-400 focus:outline-none focus:border-purple-500 focus:ring-1 focus:ring-purple-500 text-sm"
          />

          {/* –ö–Ω–æ–ø–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ */}
          <button
            onClick={() => setShowTools(!showTools)}
            className={`w-10 h-10 rounded-full flex items-center justify-center transition-colors ${
              showTools ? 'bg-purple-600 text-white' : 'bg-gray-700 hover:bg-gray-600'
            }`}
            title="–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"
          >
            üîß
          </button>

          {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ */}
          <button
            onClick={handleSendMessage}
            disabled={!inputValue.trim() || isLoading}
            className={`w-10 h-10 rounded-full flex items-center justify-center transition-colors ${
              inputValue.trim() && !isLoading
                ? 'bg-blue-600 hover:bg-blue-700 text-white'
                : 'bg-gray-700 text-gray-500 cursor-not-allowed'
            }`}
            title="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"
          >
            ‚û§
          </button>
        </div>

        {/* –°–∫—Ä—ã—Ç—ã–π input –¥–ª—è —Ñ–∞–π–ª–æ–≤ */}
        <input
          ref={fileInputRef}
          type="file"
          multiple
          accept=".pdf,.doc,.docx,.txt,.png,.jpg,.jpeg,.mp4,.mov"
          onChange={handleFileUpload}
          className="hidden"
        />
      </div>

      {/* –†—É—á–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞) */}
      {!isDocked && (
        <div
          className="absolute bottom-0 right-0 w-4 h-4 bg-gray-600 hover:bg-gray-500 cursor-se-resize"
          onMouseDown={handleResizeStart}
          title="–ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–∑–º–µ—Ä"
        >
          <div className="absolute bottom-0.5 right-0.5 w-2 h-2">
            <svg viewBox="0 0 8 8" className="w-full h-full text-gray-400">
              <path d="M8,0L8,8L0,8" fill="currentColor" />
            </svg>
          </div>
        </div>
      )}

      {/* –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Å–∫—Ä–æ–ª–ª–±–∞—Ä–∞ */}
      <style jsx>{`
        .custom-scrollbar::-webkit-scrollbar {
          width: 4px;
        }
        .custom-scrollbar::-webkit-scrollbar-track {
          background: rgba(55, 65, 81, 0.3);
        }
        .custom-scrollbar::-webkit-scrollbar-thumb {
          background: rgba(107, 114, 128, 0.7);
          border-radius: 2px;
        }
        .custom-scrollbar::-webkit-scrollbar-thumb:hover {
          background: rgba(107, 114, 128, 0.9);
        }
      `}</style>
      
      {/* Paywall Modal –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª–∏–º–∏—Ç–æ–≤ —Ç–æ–∫–µ–Ω–æ–≤ */}
      {/* –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∞ */}
      {showPaywall && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50">
          <div className="bg-white dark:bg-gray-800 p-6 rounded-lg max-w-md mx-4">
            <h3 className="text-lg font-bold mb-4 text-gray-900 dark:text-white">
              üí≥ –õ–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç
            </h3>
            <p className="mb-4 text-gray-700 dark:text-gray-300">
              {paywallConfig.description}
            </p>
            <p className="text-2xl font-bold mb-4 text-center text-gray-900 dark:text-white">
              ${paywallConfig.cost}
            </p>
            <div className="flex space-x-4">
              <button 
                onClick={async () => {
                  console.log('üí≥ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–∫—É–ø–∫–µ —Ç–æ–∫–µ–Ω–æ–≤')
                  
                  // –õ–æ–≥–∏—Ä—É–µ–º –∫–ª–∏–∫ A/B —Ç–µ—Å—Ç–∞ (—Å–∏–º—É–ª—è—Ü–∏—è)
                  if (currentABTest) {
                    console.log(`üìä A/B —Ç–µ—Å—Ç click: ${currentABTest.testResult.variantId}`)
                    // await logPaywallClick(currentABTest.testResult)
                    
                    // –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ –¥–ª—è –¥–µ–º–æ
                    const paymentIntentId = `pi_token_abtest_${Date.now()}`
                    console.log(`üìä A/B —Ç–µ—Å—Ç conversion: ${currentABTest.testResult.variantId}, payment: ${paymentIntentId}, price: $${currentABTest.price}`)
                    // await logPaywallConversion(currentABTest.testResult, paymentIntentId, currentABTest.price)
                    console.log(`‚úÖ A/B —Ç–µ—Å—Ç –∫–æ–Ω–≤–µ—Ä—Å–∏—è –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∞: ${paymentIntentId}`)
                  }
                  
                  setShowPaywall(false)
                }}
                className="flex-1 bg-purple-600 text-white py-2 px-4 rounded hover:bg-purple-700 transition-colors"
              >
                –ö—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å
              </button>
              <button 
                onClick={() => setShowPaywall(false)}
                className="flex-1 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 py-2 px-4 rounded hover:bg-gray-400 dark:hover:bg-gray-500 transition-colors"
              >
                –ü–æ–∑–∂–µ
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  )
} 