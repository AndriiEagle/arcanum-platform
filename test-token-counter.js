// –¢–µ—Å—Ç –¥–ª—è TokenCounter –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TOKEN COUNTER –ö–û–ú–ü–û–ù–ï–ù–¢–ê')
console.log('========================================')

// –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–ø—Å–æ–≤ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
const mockTokenStates = {
  newUser: {
    used: 0,
    limit: 1000,
    percentageUsed: 0,
    isLoading: false,
    showWarning: false,
    warningMessage: '',
    isPremium: false
  },
  
  normalUsage: {
    used: 350,
    limit: 1000,
    percentageUsed: 35,
    isLoading: false,
    showWarning: false,
    warningMessage: '',
    isPremium: false
  },
  
  nearLimit: {
    used: 850,
    limit: 1000,
    percentageUsed: 85,
    isLoading: false,
    showWarning: true,
    warningMessage: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ 85% —Ç–æ–∫–µ–Ω–æ–≤. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º upgrade!',
    isPremium: false
  },
  
  exceededLimit: {
    used: 1200,
    limit: 1000,
    percentageUsed: 120,
    isLoading: false,
    showWarning: true,
    warningMessage: '–õ–∏–º–∏—Ç —Ç–æ–∫–µ–Ω–æ–≤ –ø—Ä–µ–≤—ã—à–µ–Ω! –¢—Ä–µ–±—É–µ—Ç—Å—è upgrade –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.',
    isPremium: false
  },
  
  premiumUser: {
    used: 2500,
    limit: 10000,
    percentageUsed: 25,
    isLoading: false,
    showWarning: false,
    warningMessage: '',
    isPremium: true
  }
}

// –°–∏–º—É–ª—è—Ü–∏—è –ª–æ–≥–∏–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
function getStatusColor(percentageUsed) {
  if (percentageUsed >= 100) return 'red'
  if (percentageUsed >= 80) return 'orange'
  if (percentageUsed >= 60) return 'yellow'
  return 'green'
}

// –°–∏–º—É–ª—è—Ü–∏—è –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
function simulateCompactMode(state) {
  const statusColor = getStatusColor(state.percentageUsed)
  const isNearLimit = state.percentageUsed > 80
  
  return {
    statusColor,
    isNearLimit,
    displayText: state.isLoading ? '...' : `${state.used.toLocaleString()}/${state.limit.toLocaleString()}`,
    showUpgradeButton: isNearLimit
  }
}

// –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
function simulateFullMode(state) {
  const statusColor = getStatusColor(state.percentageUsed)
  const isNearLimit = state.percentageUsed > 80
  
  return {
    statusColor,
    isNearLimit,
    statusText: state.isPremium ? 'Premium' : 'Basic',
    displayText: state.isLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : `${state.used.toLocaleString()} / ${state.limit.toLocaleString()}`,
    percentageText: `${state.percentageUsed.toFixed(1)}% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ`,
    showUpgradeButton: isNearLimit || state.percentageUsed >= 100,
    upgradeButtonText: state.percentageUsed >= 100 ? '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' : 'Upgrade',
    showWarning: state.showWarning,
    warningMessage: state.warningMessage,
    remainingTokens: Math.max(0, state.limit - state.used)
  }
}

function testNewUser() {
  console.log('\nüë§ –¢–µ—Å—Ç 1: –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (0% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)')
  
  const state = mockTokenStates.newUser
  const compact = simulateCompactMode(state)
  const full = simulateFullMode(state)
  
  console.log('üìä –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º:')
  console.log(`   - –¶–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞: ${compact.statusColor}`)
  console.log(`   - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${compact.displayText}`)
  console.log(`   - –ö–Ω–æ–ø–∫–∞ upgrade: ${compact.showUpgradeButton ? '–î–ê' : '–ù–ï–¢'}`)
  
  console.log('üìä –ü–æ–ª–Ω—ã–π —Ä–µ–∂–∏–º:')
  console.log(`   - –°—Ç–∞—Ç—É—Å: ${full.statusText}`)
  console.log(`   - –ü—Ä–æ—Ü–µ–Ω—Ç: ${full.percentageText}`)
  console.log(`   - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ${full.showWarning ? '–î–ê' : '–ù–ï–¢'}`)
  console.log(`   - –û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–∫–µ–Ω–æ–≤: ${full.remainingTokens.toLocaleString()}`)
  
  return compact.statusColor === 'green' && !full.showWarning
}

function testNormalUsage() {
  console.log('\nüìà –¢–µ—Å—Ç 2: –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ (35%)')
  
  const state = mockTokenStates.normalUsage
  const compact = simulateCompactMode(state)
  const full = simulateFullMode(state)
  
  console.log('üìä –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º:')
  console.log(`   - –¶–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞: ${compact.statusColor}`)
  console.log(`   - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${compact.displayText}`)
  console.log(`   - –ö–Ω–æ–ø–∫–∞ upgrade: ${compact.showUpgradeButton ? '–î–ê' : '–ù–ï–¢'}`)
  
  console.log('üìä –ü–æ–ª–Ω—ã–π —Ä–µ–∂–∏–º:')
  console.log(`   - –ü—Ä–æ—Ü–µ–Ω—Ç: ${full.percentageText}`)
  console.log(`   - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ${full.showWarning ? '–î–ê' : '–ù–ï–¢'}`)
  console.log(`   - –ö–Ω–æ–ø–∫–∞ upgrade: ${full.showUpgradeButton ? '–î–ê' : '–ù–ï–¢'}`)
  
  return compact.statusColor === 'green' && !full.showWarning && !full.showUpgradeButton
}

function testNearLimit() {
  console.log('\n‚ö†Ô∏è  –¢–µ—Å—Ç 3: –ë–ª–∏–∑–∫–æ –∫ –ª–∏–º–∏—Ç—É (85%)')
  
  const state = mockTokenStates.nearLimit
  const compact = simulateCompactMode(state)
  const full = simulateFullMode(state)
  
  console.log('üìä –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º:')
  console.log(`   - –¶–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞: ${compact.statusColor}`)
  console.log(`   - –ö–Ω–æ–ø–∫–∞ upgrade: ${compact.showUpgradeButton ? '‚ö†Ô∏è  –î–ê' : '–ù–ï–¢'}`)
  
  console.log('üìä –ü–æ–ª–Ω—ã–π —Ä–µ–∂–∏–º:')
  console.log(`   - –¶–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞: ${full.statusColor}`)
  console.log(`   - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ${full.showWarning ? '‚ö†Ô∏è  –î–ê' : '–ù–ï–¢'}`)
  console.log(`   - –°–æ–æ–±—â–µ–Ω–∏–µ: ${full.warningMessage}`)
  console.log(`   - –ö–Ω–æ–ø–∫–∞ upgrade: ${full.showUpgradeButton ? 'üí∞ –î–ê' : '–ù–ï–¢'}`)
  console.log(`   - –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏: ${full.upgradeButtonText}`)
  
  return (
    compact.statusColor === 'orange' && 
    compact.showUpgradeButton && 
    full.showWarning && 
    full.showUpgradeButton
  )
}

function testExceededLimit() {
  console.log('\nüö´ –¢–µ—Å—Ç 4: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç (120%)')
  
  const state = mockTokenStates.exceededLimit
  const compact = simulateCompactMode(state)
  const full = simulateFullMode(state)
  
  console.log('üìä –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º:')
  console.log(`   - –¶–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞: ${compact.statusColor}`)
  console.log(`   - –ö–Ω–æ–ø–∫–∞ upgrade: ${compact.showUpgradeButton ? 'üö® –î–ê' : '–ù–ï–¢'}`)
  
  console.log('üìä –ü–æ–ª–Ω—ã–π —Ä–µ–∂–∏–º:')
  console.log(`   - –¶–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞: ${full.statusColor}`)
  console.log(`   - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ${full.showWarning ? 'üö® –î–ê' : '–ù–ï–¢'}`)
  console.log(`   - –°–æ–æ–±—â–µ–Ω–∏–µ: ${full.warningMessage}`)
  console.log(`   - –ö–Ω–æ–ø–∫–∞ upgrade: ${full.showUpgradeButton ? 'üö® –î–ê' : '–ù–ï–¢'}`)
  console.log(`   - –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏: ${full.upgradeButtonText}`)
  console.log(`   - –ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ: ${state.used - state.limit} —Ç–æ–∫–µ–Ω–æ–≤`)
  
  return (
    compact.statusColor === 'red' && 
    full.upgradeButtonText === '–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å' &&
    full.showWarning
  )
}

function testPremiumUser() {
  console.log('\nüëë –¢–µ—Å—Ç 5: –ü—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (25% –æ—Ç 10K)')
  
  const state = mockTokenStates.premiumUser
  const compact = simulateCompactMode(state)
  const full = simulateFullMode(state)
  
  console.log('üìä –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º:')
  console.log(`   - –¶–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞: ${compact.statusColor}`)
  console.log(`   - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${compact.displayText}`)
  console.log(`   - –ö–Ω–æ–ø–∫–∞ upgrade: ${compact.showUpgradeButton ? '–î–ê' : '–ù–ï–¢'}`)
  
  console.log('üìä –ü–æ–ª–Ω—ã–π —Ä–µ–∂–∏–º:')
  console.log(`   - –°—Ç–∞—Ç—É—Å: ${full.statusText} üëë`)
  console.log(`   - –ü—Ä–æ—Ü–µ–Ω—Ç: ${full.percentageText}`)
  console.log(`   - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: ${full.showWarning ? '–î–ê' : '–ù–ï–¢'}`)
  console.log(`   - –û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–∫–µ–Ω–æ–≤: ${full.remainingTokens.toLocaleString()}`)
  
  return (
    compact.statusColor === 'green' && 
    full.statusText === 'Premium' &&
    !full.showWarning &&
    state.limit === 10000
  )
}

function testAnonymousUser() {
  console.log('\nüîí –¢–µ—Å—Ç 6: –ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')
  
  // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const anonymousDisplay = {
    showLoginPrompt: true,
    message: '–í–æ–π–¥–∏—Ç–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤',
    statusColor: 'blue'
  }
  
  console.log('üìä –ê–Ω–æ–Ω–∏–º–Ω—ã–π —Ä–µ–∂–∏–º:')
  console.log(`   - –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤—Ö–æ–¥–∞: ${anonymousDisplay.showLoginPrompt ? '–î–ê' : '–ù–ï–¢'}`)
  console.log(`   - –°–æ–æ–±—â–µ–Ω–∏–µ: ${anonymousDisplay.message}`)
  console.log(`   - –¶–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞: ${anonymousDisplay.statusColor}`)
  
  return anonymousDisplay.showLoginPrompt && anonymousDisplay.message.includes('–í–æ–π–¥–∏—Ç–µ')
}

async function main() {
  try {
    const test1 = testNewUser()
    const test2 = testNormalUsage()
    const test3 = testNearLimit()
    const test4 = testExceededLimit()
    const test5 = testPremiumUser()
    const test6 = testAnonymousUser()
    
    console.log('\nüìã –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ TOKEN COUNTER')
    console.log('====================================')
    console.log(`üë§ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${test1 ? '‚úÖ' : '‚ùå'}`)
    console.log(`üìà –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ${test2 ? '‚úÖ' : '‚ùå'}`)
    console.log(`‚ö†Ô∏è  –ë–ª–∏–∑–∫–æ –∫ –ª–∏–º–∏—Ç—É: ${test3 ? '‚úÖ' : '‚ùå'}`)
    console.log(`üö´ –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç: ${test4 ? '‚úÖ' : '‚ùå'}`)
    console.log(`üëë –ü—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${test5 ? '‚úÖ' : '‚ùå'}`)
    console.log(`üîí –ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${test6 ? '‚úÖ' : '‚ùå'}`)
    
    const passedTests = [test1, test2, test3, test4, test5, test6].filter(Boolean).length
    console.log(`\nüéØ –£–°–ü–ï–®–ù–´–• –¢–ï–°–¢–û–í: ${passedTests}/6`)
    
    if (passedTests === 6) {
      console.log('\nüéâ –®–ê–ì 6 –ó–ê–í–ï–†–®–ï–ù!')
      console.log('‚úÖ TokenCounter –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω')
      console.log('‚úÖ –í—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è')
      console.log('‚úÖ –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∏ –ø–æ–ª–Ω—ã–π —Ä–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç')
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ü–≤–µ—Ç–æ–≤ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç')
      console.log('‚úÖ –ü—Ä–µ–º–∏—É–º –∏ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è')
      console.log('‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Zustand store –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞')
      console.log('\n‚û°Ô∏è  –ì–û–¢–û–í –ö –®–ê–ì–£ 7: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ MainContentArea')
    } else {
      console.log('\n‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞')
    }
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
  }
}

main() 